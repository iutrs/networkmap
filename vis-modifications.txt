Modifications on vis.js:

Everything that uses labelTo and labelFrom have been added by Marc-Antoine Fortier
in order to display informations on both ends of a link.

diff --git a/dist/vis.js b/dist/vis.js
index b42c66a..2816b4b 100644
--- a/dist/vis.js
+++ b/dist/vis.js
@@ -18881,13 +18881,14 @@ return /******/ (function(modules) { // webpackBootstrap
 
     if (properties.from !== undefined)           {this.fromId = properties.from;}
     if (properties.to !== undefined)             {this.toId = properties.to;}
-
     if (properties.id !== undefined)             {this.id = properties.id;}
     if (properties.label !== undefined)          {this.label = properties.label; this.dirtyLabel = true;}
+    if (properties.labelFrom !== undefined)      {this.labelFrom = properties.labelFrom; this.dirtyLabel = true;}
+    if (properties.labelTo !== undefined)        {this.labelTo = properties.labelTo; this.dirtyLabel = true;}
 
-    if (properties.title !== undefined)        {this.title = properties.title;}
-    if (properties.value !== undefined)        {this.value = properties.value;}
-    if (properties.length !== undefined)       {this.physics.springLength = properties.length;}
+    if (properties.title !== undefined)          {this.title = properties.title;}
+    if (properties.value !== undefined)          {this.value = properties.value;}
+    if (properties.length !== undefined)         {this.physics.springLength = properties.length;}
 
     if (properties.color !== undefined) {
       this.options.inheritColor = false;
@@ -19110,6 +19111,28 @@ return /******/ (function(modules) { // webpackBootstrap
         }
         this._label(ctx, this.label, point.x, point.y);
       }
+      if (this.labelFrom) {
+        if (this.options.smoothCurves.enabled == true && via != null) {
+          var midpointX = 0.5*(0.5*(this.from.x + via.x) + 0.5*(this.to.x + via.x));
+          var midpointY = 0.5*(0.5*(this.from.y + via.y) + 0.5*(this.to.y + via.y));
+          point = {x:midpointX, y:midpointY};
+        }
+        else {
+          point = this._pointOnLine(0.3);
+        }
+        this._label(ctx, this.labelFrom, point.x, point.y);
+      }
+      if (this.labelTo) {
+        if (this.options.smoothCurves.enabled == true && via != null) {
+          var midpointX = 0.5*(0.5*(this.from.x + via.x) + 0.5*(this.to.x + via.x));
+          var midpointY = 0.5*(0.5*(this.from.y + via.y) + 0.5*(this.to.y + via.y));
+          point = {x:midpointX, y:midpointY};
+        }
+        else {
+          point = this._pointOnLine(0.7);
+        }
+        this._label(ctx, this.labelTo, point.x, point.y);
+      }
     }
     else {
       var x, y;
@@ -19127,8 +19150,15 @@ return /******/ (function(modules) { // webpackBootstrap
         y = node.y - node.height / 2;
       }
       this._circle(ctx, x, y, radius);
+
       point = this._pointOnCircle(x, y, radius, 0.5);
       this._label(ctx, this.label, point.x, point.y);
+
+      point = this._pointOnCircle(x, y, radius, 0.3);
+      this._label(ctx, this.labelFrom, point.x, point.y);
+
+      point = this._pointOnCircle(x, y, radius, 0.7);
+      this._label(ctx, this.labelTo, point.x, point.y);
     }
   };
 
@@ -19615,6 +19645,30 @@ return /******/ (function(modules) { // webpackBootstrap
       }
       this._label(ctx, this.label, point.x, point.y);
     }
+    if (this.labelFrom) {
+      var point;
+      if (this.options.smoothCurves.enabled == true && via != null) {
+        var midpointX = 0.5*(0.5*(this.from.x + via.x) + 0.5*(this.to.x + via.x));
+        var midpointY = 0.5*(0.5*(this.from.y + via.y) + 0.5*(this.to.y + via.y));
+        point = {x:midpointX, y:midpointY};
+      }
+      else {
+        point = this._pointOnLine(0.3);
+      }
+      this._label(ctx, this.labelFrom, point.x, point.y);
+    }
+    if (this.labelTo) {
+      var point;
+      if (this.options.smoothCurves.enabled == true && via != null) {
+        var midpointX = 0.5*(0.5*(this.from.x + via.x) + 0.5*(this.to.x + via.x));
+        var midpointY = 0.5*(0.5*(this.from.y + via.y) + 0.5*(this.to.y + via.y));
+        point = {x:midpointX, y:midpointY};
+      }
+      else {
+        point = this._pointOnLine(0.7);
+      }
+      this._label(ctx, this.labelTo, point.x, point.y);
+    }
   };
 
   /**
@@ -19685,6 +19739,33 @@ return /******/ (function(modules) { // webpackBootstrap
       if (this.label) {
         this._label(ctx, this.label, point.x, point.y);
       }
+
+      if (this.labelFrom) {
+        var point;
+        if (this.options.smoothCurves.enabled == true && via != null) {
+            var midpointX = 0.5*(0.5*(this.from.x + via.x) + 0.5*(this.to.x + via.x));
+            var midpointY = 0.5*(0.5*(this.from.y + via.y) + 0.5*(this.to.y + via.y));
+            point = {x:midpointX, y:midpointY};
+        }
+        else {
+            point = this._pointOnLine(0.3);
+        }
+        this._label(ctx, this.labelFrom, point.x, point.y);
+      }
+
+      if (this.labelTo) {
+        var point;
+        if (this.options.smoothCurves.enabled == true && via != null) {
+            var midpointX = 0.5*(0.5*(this.from.x + via.x) + 0.5*(this.to.x + via.x));
+            var midpointY = 0.5*(0.5*(this.from.y + via.y) + 0.5*(this.to.y + via.y));
+            point = {x:midpointX, y:midpointY};
+        }
+        else {
+            point = this._pointOnLine(0.7);
+        }
+        this._label(ctx, this.labelTo, point.x, point.y);
+      }
+
     }
     else {
       // draw circle
@@ -19717,6 +19798,14 @@ return /******/ (function(modules) { // webpackBootstrap
         point = this._pointOnCircle(x, y, radius, 0.5);
         this._label(ctx, this.label, point.x, point.y);
       }
+      if (this.labelFrom) {
+        point = this._pointOnCircle(x, y, radius, 0.3);
+        this._label(ctx, this.labelFrom, point.x, point.y);
+      }
+      if (this.labelTo) {
+        point = this._pointOnCircle(x, y, radius, 0.7);
+        this._label(ctx, this.labelTo, point.x, point.y);
+      }
     }
   };
 
@@ -19842,6 +19931,26 @@ return /******/ (function(modules) { // webpackBootstrap
         }
         this._label(ctx, this.label, point.x, point.y);
       }
+      if (this.labelFrom) {
+        var point;
+        if (this.options.smoothCurves.enabled == true && via != null) {
+          point = this._pointOnBezier(0.3);
+        }
+        else {
+          point = this._pointOnLine(0.3);
+        }
+        this._label(ctx, this.labelFrom, point.x, point.y);
+      }
+      if (this.labelTo) {
+        var point;
+        if (this.options.smoothCurves.enabled == true && via != null) {
+          point = this._pointOnBezier(0.7);
+        }
+        else {
+          point = this._pointOnLine(0.7);
+        }
+        this._label(ctx, this.labelTo, point.x, point.y);
+      }
     }
     else {
       // draw circle
@@ -19885,6 +19994,16 @@ return /******/ (function(modules) { // webpackBootstrap
         point = this._pointOnCircle(x, y, radius, 0.5);
         this._label(ctx, this.label, point.x, point.y);
       }
+      // draw label
+      if (this.labelFrom) {
+        point = this._pointOnCircle(x, y, radius, 0.3);
+        this._label(ctx, this.labelFrom, point.x, point.y);
+      }
+      // draw label
+      if (this.labelTo) {
+        point = this._pointOnCircle(x, y, radius, 0.7);
+        this._label(ctx, this.labelTo, point.x, point.y);
+      }
     }
   };
 
@@ -35615,4 +35734,4 @@ return /******/ (function(modules) { // webpackBootstrap
 /***/ }
 /******/ ])
 });
-;
\ No newline at end of file
+;